<% content_for :contents_left do -%>
  <%= render(:partial => 'user/portrait_box', :locals => { :user => @user }) -%>
  <%= render(:partial => "shared/menu", :locals => { :menu_items => ribbit_menu_items("message") }) %>
<% end -%>

<% content_for :contents_right do -%>
<ul class="ribbit">
  <div id="alternative"></div>
</ul>
<div id="topic-grid"></div>
<% end -%>
<% content_for :javascript do -%>
<%= skip_javascript_include_tag "swfobject.js" %>
<script type="text/javascript">
$j(function() {
    <% if @ribbit %>
    swfobject.embedSWF("<%= url_for('/RibbitOnSKIPMessages.swf') %>", "alternative", "244", "132", "9.0.0", "<%= url_for('/expressInstall.swf') %>", <%= get_flash_vars(@ribbit) %>);
    <% end %>
//-----
createGrid = function(data){
    Ext.state.Manager.setProvider(new Ext.state.CookieProvider());

    var myData = data;

    // example of custom renderer function
    function change(val){
        if(val > 0){
            return '<span style="color:green;">' + val + '</span>';
        }else if(val < 0){
            return '<span style="color:red;">' + val + '</span>';
        }
        return val;
    }

    // example of custom renderer function
    function pctChange(val){
        if(val > 0){
            return '<span style="color:green;">' + val + '%</span>';
        }else if(val < 0){
            return '<span style="color:red;">' + val + '%</span>';
        }
        return val;
    }
// {id:item.id, name:item.name, number:item.number, startTime:item.startTime, callType:item.callType, title:item.title, transcription:item.transcription, notes:item.notes}

    // create the data store
    var store = new Ext.data.SimpleStore({
        fields: [
           {name: 'id'},
           {name: 'name'},
           {name: 'number'},
           {name: 'startTime'},
           {name: 'callType'},
           {name: 'title'},
           {name: 'transcription'},
           {name: 'notes'}
        ]
    });
    store.loadData(myData);

    // create the Grid
    var grid = new Ext.grid.GridPanel({
        store: store,
        columns: [
            {header: "Id", width: 160, sortable: true, dataIndex: 'id'},
            {header: "Name", width: 75, sortable: true, dataIndex: 'name'},
            {header: "Number", width: 75, sortable: true, dataIndex: 'number'},
            {header: "Start time", width: 75, sortable: true, dataIndex: 'startTime'},
            {header: "Call type", width: 75, sortable: true, dataIndex: 'callType'},
            {header: "Title", width: 75, sortable: true, dataIndex: 'title'},
            {header: "Transcription", width: 75, sortable: true, dataIndex: 'transcription'},
            {header: "Notes", width: 75, sortable: true, dataIndex: 'notes'}
        ],
        stripeRows: true,
        autoExpandColumn: 'id',
        height:350,
        width:600,
        title:'Array Grid'
    });

    grid.render('topic-grid');

};

});
    var renderTable = function(list){
        var ulObj = $j('ul.ribbit');
        $j.each(list, function() {
            var liObj = $j('<li><div class="title">' + this.id + ":" + this.number +'</div><div class="body">' + this.name + '</div></li>');
            ulObj.append(liObj);
        });
        $j('object#alternative').hide();
//        createGrid(list);
        return true;
    };
</script>
<% end -%>

